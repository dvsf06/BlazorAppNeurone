@page "/gestisciinput"
<PageTitle>Input</PageTitle>

<h1>Gestisci input</h1>

<input type="number" @bind="nInput"/>
<button @onclick="CreaTabellaClick">Crea tabella</button>
<button @onclick="SerializzaTestSet">Salva</button>

@if (renderTable)
{
    <table>
        <thead>
            <tr>
                @for (int i = 0; i < nInput + 1; i++)
                {
                    <th scope="col">@((i != nInput) ? $"I{i + 1}" : "Target")</th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < (int)Math.Pow(nInput, 2); i++)
            {
                <tr>
                    @for (int j = 0; j < nInput + 1; j++)
                    {
                        if(j != nInput)
                        {
                            int captJ = j;
                            int captI = i;
                            <td><input type="number" value="@inputSet[j, i]" @oninput="@((args) => inputSet[captJ, captI] = Convert.ToInt32(args.Value))" /></td>
                        }
                        else
                        {
                            int captI = i;
                            <td><input type="number" value="@targetSet[i]" @oninput="@((args) => targetSet[captI] = Convert.ToInt32(args.Value))" /></td>
                        }                        
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    bool renderTable = false;

    int[,] inputSet;
    int[] targetSet;
    int nInput;

    private void CreaTabellaClick()
    {
        inputSet = new int[nInput, (int)Math.Pow(nInput, 2)];
        targetSet = new int[(int)Math.Pow(nInput, 2)];
        renderTable = true;
    }

    private void SerializzaTestSet()
    {
        Neurone.MatriceInput = inputSet;
        Neurone.VettoreTarget = targetSet;
        Neurone.SerializzaTestSet();
    }
}
